<!-- 
/*
 * SmartTestAutoFramework / Smart-TestAuto-Studio
 * Copyright 2021 and beyond [Madhav Krishna]
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * @Author Madhav Krishna
 */
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.uitnet.testing.smartfwk</groupId>
	<artifactId>Smart-TestAuto-Studio</artifactId>
	<version>7.0.1</version>
	<packaging>jar</packaging>
	<name>Smart Testing Automation Studio</name>
	<description>
		Smart Testing Automation Studio is a one platform used to perform 
		End-to-End testing for the configured software applications. It hides
		all the complexities of the underlying softwares tools and provides easy
		environment to develop automation testing scripts using your best 
		suitable Java based code editor like Eclipse, Intellij IDEA etc. For more
		details please refer our Github project: 
		https://github.com/mkrishna4u/smart-testauto-framework
	</description>

	<properties>
	    <parallel.threads>1</parallel.threads>
		<smart-testauto-framework.version>7.0.1</smart-testauto-framework.version>
		<smart-testauto-cucumber-stepdefs-en.version>7.0.1</smart-testauto-cucumber-stepdefs-en.version>
		<cucumber-reporting.version>5.8.4</cucumber-reporting.version>
		<maven-cucumber-reporting.version>5.8.5</maven-cucumber-reporting.version>
		
		<maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
		
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		
		<maven-surefire-plugin.version>3.5.2</maven-surefire-plugin.version>
		<maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>		
		<maven-clean-plugin.version>3.4.0</maven-clean-plugin.version>
	</properties>
		
	<repositories>
		<repository>
			<id>local-repository</id>
			<url>file:///${project.basedir}/libs</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>org.uitnet.testing</groupId>
			<artifactId>smart-testauto-framework</artifactId>
			<version>${smart-testauto-framework.version}</version>			
		</dependency>
		
		<dependency>
			<groupId>org.uitnet.testing.smartfwk</groupId>
			<artifactId>smart-testauto-cucumber-stepdefs-en</artifactId>
			<version>${smart-testauto-cucumber-stepdefs-en.version}</version>			
		</dependency>

		<dependency>
			<groupId>net.masterthought</groupId>
			<artifactId>cucumber-reporting</artifactId>
			<version>${cucumber-reporting.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<fork>true</fork>
					<encoding>UTF-8</encoding>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<compilerArgument>-XDignore.symbol.file=true</compilerArgument>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<testFailureIgnore>true</testFailureIgnore>
					<parallel>methods</parallel>
					<threadCount>1</threadCount>
					<redirectTestOutputToFile>false</redirectTestOutputToFile>
					<disableXmlReport>true</disableXmlReport>
					<argLine>-Xmx3g</argLine>
					<properties>
						<property>
							<name>dataproviderthreadcount</name>
							<value>${parallel.threads}</value>
						</property>
						<property>
							<name>usedefaultlisteners</name>
							<value>false</value>
						</property>
					</properties>
				</configuration>
			</plugin>

			<plugin>
				<groupId>net.masterthought</groupId>
				<artifactId>maven-cucumber-reporting</artifactId>
				<version>${maven-cucumber-reporting.version}</version>
				<executions>
					<execution>
						<id>execution</id>
						<phase>verify</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<projectName>${project.name}</projectName>
							<skip>false</skip>
							<outputDirectory>${project.basedir}/test-results</outputDirectory>
							<inputDirectory>${project.basedir}/test-results/cucumber-reports/json</inputDirectory>
							<jsonFiles>
								<param>**/*.json</param>
							</jsonFiles>
							<mergeFeaturesById>false</mergeFeaturesById>
							<mergeFeaturesWithRetest>false</mergeFeaturesWithRetest>
							<checkBuildResult>true</checkBuildResult>
							<skipEmptyJSONFiles>true</skipEmptyJSONFiles>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven-clean-plugin.version}</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>${project.basedir}/test-output</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
						<fileset>
							<directory>${project.basedir}/test-results</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
						<fileset>
							<directory>${project.basedir}/target</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			
		</plugins>
	</build>
</project>
